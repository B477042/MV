{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/RS_MenuInformation/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","parameters","PluginManager","_menuName","String","preloadImages","preloadImageId","Utils","generateRuntimeId","alias_Game_Variables_initialize","Game_Variables","initialize","this","_menuInformation","addMenuInformation","text","push","menuInformation","clearMenuInformation","MenuInformation","$gameVariables","join","window","alias_Window_MenuCommand_addOriginalCommands","Window_MenuCommand","addOriginalCommands","addInformationCommand","addCommand","alias_Scene_Menu_createCommandWindow","Scene_Menu","createCommandWindow","_commandWindow","setHandler","commandInformation","SceneManager","Scene_Information","Window_Information","Graphics","boxWidth","boxHeight","_text","Window_Base","refresh","setText","contents","clear","drawTextEx","textPadding","textState","index","arr","exec","slice","length","toUpperCase","imageName","degree","replace","substring","args","parseFloat","RegExp","$1","bitmap","ImageManager","loadPicture","dx","x","dy","y","context","_context","rotation","Math","PI","cos","sin","width","standardPadding","save","setTransform","blt","height","restore","code","toLowerCase","addImage","obtainImage","_isReady","Scene_MenuBase","allText","forEach","reservePicture","_informationWindow","addWindow","isCancelled","popScene","releaseReservation","Input","isTriggered","TouchInput","actor","activate","alias_Game_Interpreter_pluginCommand","Game_Interpreter","pluginCommand","command","str","add","Imported","RS_ArabicMessageSystem","RS","ArabicMessageSystem","defineInitialize"],"mappings":"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","file":"RS_MenuInformation.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// import \"@babel/polyfill\";\r\n\r\n\"use strict\";\r\n\r\nconst parameters = PluginManager.parameters('RS_MenuInformation');\r\nlet _menuName = String(parameters['Menu Name'] || \"Information\");\r\nlet _menuSymbol = \"information\";\r\n\r\nlet preloadingImage = true;\r\nlet preloadImages = [];\r\nlet preloadImageId = Utils.generateRuntimeId();\r\nlet isImageText = false;\r\n\r\n//============================================================================\r\n// Game_Variables\r\n//============================================================================  \r\n\r\nvar alias_Game_Variables_initialize = Game_Variables.prototype.initialize;\r\nGame_Variables.prototype.initialize = function() {\r\n  alias_Game_Variables_initialize.call(this);\r\n  this._menuInformation = [];\r\n};\r\n\r\nGame_Variables.prototype.addMenuInformation = function(text) {\r\n  if(!this._menuInformation) this._menuInformation = [];\r\n  this._menuInformation.push(text);\r\n};\r\n\r\nGame_Variables.prototype.menuInformation = function() {\r\n  if(!this._menuInformation) this._menuInformation = [];\r\n  return this._menuInformation;\r\n};\r\n\r\nGame_Variables.prototype.clearMenuInformation = function() {\r\n  this._menuInformation = [];\r\n};  \r\n\r\n//============================================================================\r\n// MenuInformation\r\n//============================================================================\r\n\r\nclass MenuInformation {\r\n\r\n  static add(text) {\r\n    $gameVariables.addMenuInformation(text);\r\n  }\r\n\r\n  static clear() {\r\n    $gameVariables.clearMenuInformation();\r\n  }\r\n\r\n  static allText() {\r\n    let texts = $gameVariables.menuInformation();\r\n    return texts.join('\\n');\r\n  }\r\n\r\n}\r\n\r\nwindow.MenuInformation = MenuInformation;\r\n\r\n//============================================================================\r\n// Window_MenuCommand\r\n//============================================================================\r\n\r\nconst alias_Window_MenuCommand_addOriginalCommands = Window_MenuCommand.prototype.addOriginalCommands;\r\nWindow_MenuCommand.prototype.addOriginalCommands = function() {\r\n  alias_Window_MenuCommand_addOriginalCommands.call(this);\r\n  this.addInformationCommand();\r\n};\r\n\r\nWindow_MenuCommand.prototype.addInformationCommand = function() {\r\n  this.addCommand(_menuName, _menuSymbol, true);\r\n};\r\n\r\n//============================================================================\r\n// Scene_Menu\r\n//============================================================================\r\n\r\nconst alias_Scene_Menu_createCommandWindow = Scene_Menu.prototype.createCommandWindow;\r\nScene_Menu.prototype.createCommandWindow = function() {\r\n  alias_Scene_Menu_createCommandWindow.call(this);\r\n  this._commandWindow.setHandler(_menuSymbol, this.commandInformation.bind(this));\r\n};\r\n\r\nScene_Menu.prototype.commandInformation = function() {\r\n  SceneManager.push(Scene_Information);\r\n};\r\n\r\n//============================================================================\r\n// Window_Information\r\n//============================================================================\r\n\r\nclass Window_Information extends Window_Base {\r\n\r\n  constructor() {\r\n    super(0, 0, Graphics.boxWidth, Graphics.boxHeight);\r\n    this._text = \"\";\r\n  }\r\n\r\n  setText(text) {\r\n    if (this._text !== text) {\r\n      this._text = text;\r\n      this.refresh();\r\n    }\r\n  }  \r\n  \r\n  clear() {\r\n    this.setText('');\r\n  }\r\n\r\n  refresh() {\r\n    this.contents.clear();\r\n    this.drawTextEx(this._text, this.textPadding(), 0);      \r\n  }\r\n\r\n  obtainEscapeCode(textState) {\r\n    textState.index++;\r\n    var regExp = /^[\\$\\.\\|\\^!><\\{\\}\\\\]|^[a-zA-Z?-?]+[!]*/i;\r\n    var arr = regExp.exec(textState.text.slice(textState.index));\r\n    if (arr) {\r\n      textState.index += arr[0].length;\r\n      return arr[0].toUpperCase();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  obtainImage(textState) {\r\n    var arr = /\\<(.*)\\>/i.exec(textState.text.slice(textState.index));\r\n    if(arr) {\r\n      textState.index += arr[0].length;\r\n      return arr[1];\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  addImage(textState, imageName) {\r\n    if(preloadingImage) {\r\n      var degree = 0.0;\r\n\r\n      // imagename:45\r\n      imageName = imageName.replace(/\\:(\\d+)/i, function(substring, args) {\r\n        degree = parseFloat(RegExp.$1);\r\n        return \"\";\r\n      });\r\n      \r\n      var bitmap = ImageManager.loadPicture(imageName);\r\n      var dx = textState.x;\r\n      var dy = textState.y;\r\n      var context = this.contents._context;\r\n\r\n      if(!degree) degree = 0.0;\r\n\r\n      var rotation = (Math.PI / 180.0) * degree;\r\n\r\n      var c = Math.cos(rotation);\r\n      var s = Math.sin(rotation);\r\n      \r\n      var x = dx;\r\n      \r\n      if(rotation) {\r\n        x += (this.width / 2) - (this.standardPadding() * 2);\r\n      }\r\n\r\n      var y = dy;\r\n\r\n      context.save();\r\n      context.setTransform( c, s, -s, c, x, y );\r\n      \r\n      this.contents.blt(bitmap, 0, 0, bitmap.width, bitmap.height, dx, dy);\r\n\r\n      context.restore();\r\n\r\n      if(isImageText) {\r\n        textState.y += bitmap.height;\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  processEscapeCharacter(code, textState) {\r\n\r\n    switch(code.toLowerCase()) {\r\n      case 'image':\r\n        this.addImage(textState, this.obtainImage(textState));\r\n        break;\r\n      default:  \r\n        super.processEscapeCharacter(code, textState);\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n//============================================================================\r\n// Scene_Information\r\n//============================================================================\r\n\r\nclass Scene_Information extends Scene_MenuBase {\r\n  \r\n  constructor() {\r\n    super()\r\n    this._isReady = false;\r\n  }\r\n\r\n  create() {\r\n\r\n    super.create();\r\n\r\n    // Preload the images.\r\n    preloadImages = [];\r\n\r\n    var texts = MenuInformation.allText();\r\n    texts.replace(/(?:IMAGE)\\<(.*)\\>/ig, function(substring, value) {\r\n      const imageName = value.replace(/\\:(\\d+)/i, () => { return \"\"; });\r\n      preloadImages.push( imageName );\r\n    });\r\n    \r\n    preloadImages.forEach(function(i) {\r\n      ImageManager.reservePicture(i, 0, preloadImageId);\r\n    }, this);\r\n\r\n    this._isReady = true;  \r\n  }\r\n\r\n  start() {\r\n    super.start();\r\n\r\n    // Create an information window\r\n    this._informationWindow = new Window_Information();\r\n    this.addWindow(this._informationWindow);\r\n\r\n    this.refresh();    \r\n  }\r\n\r\n  isReady() {\r\n    return this._isReady && super.isReady();\r\n  }\r\n\r\n  update() {\r\n    super.update();\r\n    if(this.isCancelled()) {\r\n      this.popScene();\r\n    }\r\n  }\r\n\r\n  terminate() {\r\n    super.terminate();\r\n\r\n    // Release the bitmap from reservation chche.\r\n    ImageManager.releaseReservation(preloadImageId);   \r\n\r\n  }\r\n\r\n  isCancelled() {\r\n    return Input.isTriggered('menu') || TouchInput.isCancelled();\r\n  }\r\n\r\n  refresh() {\r\n    var actor = this.actor();\r\n    this._informationWindow.setText(MenuInformation.allText());\r\n    this._informationWindow.refresh();\r\n    this._informationWindow.activate();\r\n  }\r\n\r\n}\r\n\r\nwindow.Scene_Information = Scene_Information;\r\n\r\n//============================================================================\r\n// Game_Interpreter\r\n//============================================================================\r\n\r\nconst alias_Game_Interpreter_pluginCommand = Game_Interpreter.prototype.pluginCommand;\r\nGame_Interpreter.prototype.pluginCommand = function(command, args) {\r\n  alias_Game_Interpreter_pluginCommand.call(this, command, args);\r\n  if(command === \"MenuInformation\") {\r\n    switch (args[0].toLowerCase()) {\r\n    case 'add':\r\n      var str = args.slice(1).join(' ');\r\n      MenuInformation.add(str);\r\n      break;\r\n    case 'clear':\r\n      MenuInformation.clear();\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nif(Imported.RS_ArabicMessageSystem) {\r\n  RS.ArabicMessageSystem.defineInitialize(Window_Information);\r\n}\r\n"],"sourceRoot":""}