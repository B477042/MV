{
/*
	 // Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and 
	 // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	 // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	 // same ids are connected.
	 // Example:
	 "Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
    "f": {
        "prefix": "f",
        "body": [
          "//================================================================",
          "// ${TM_FILENAME}",
          "// ---------------------------------------------------------------",
          "// The MIT License",
          "// Copyright (c) ${CURRENT_YEAR} biud436",
          "// ---------------------------------------------------------------",
          "// Free for commercial and non commercial use.",
          "//================================================================",
          "${BLOCK_COMMENT_START}:",
          " * @plugindesc <${TM_FILENAME_BASE}>",
          " * @author biud436",
          " *          ",
          " * @help",
          " *",
          " ${BLOCK_COMMENT_END}",
          "",
          "var Imported = Imported || {};",	
          "Imported.${TM_FILENAME_BASE} = true;",
          "",
          "var RS = RS || {};",
          "RS.${TM_FILENAME_BASE/RS_(.*)$/$1/} = RS.${TM_FILENAME_BASE/RS_(.*)$/$1/} || {};",
          "",
          "(function($) {",
          "\t$0",
          "\t\"use strict\";",
          "",
          "\tvar parameters = \\$plugins.filter(function (i) {",
          "\t  return i.description.contains('<${TM_FILENAME_BASE}>');",            
          "\t});",                      
          "\t",             
          "\tparameters = (parameters.length > 0) && parameters[0].parameters;",   
          "\t",                       
          "})(RS.${TM_FILENAME_BASE/RS_(.*)$/$1/});"
        ],
        "description": "즉시 실행 함수(RMMV)"
    },
    "함수": {
        "prefix": "f",
        "body": [
          "function () {",
          "\t$0",
          "};"
        ],
        "description": "함수"
    },
    "프로토타입": {
        "prefix": "f",
        "body": [
          "function $0() {",
          "\tthis.initialize.apply(this, arguments);",
          "};",
          "",
          "$0.prototype = Object.create(.prototype);",
          "$0.prototype.constructor = $0;",
          "",
          "$0.prototype.initialize = function() {",
          "\t",
          "};"
        ],
        "description": "함수"
    },    
    "자동생성": {
      "prefix": "f",
      "body": [
        "var alias_$0_$1 = $0.prototype.$1;",
        "$0.prototype.$1 = function() {",
        "\t",
        "};          ",
      ],
      "description": "프로토타입 방식 재정의 함수",
    },
}